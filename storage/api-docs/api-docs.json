{
    "openapi": "3.0.0",
    "info": {
        "title": "UAT Crowdsourcing API Documentation",
        "description": "API documentation for UAT Crowdsourcing Application",
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://localhost:8000/api",
            "description": "Local API Server"
        }
    ],
    "paths": {
        "/applications": {
            "get": {
                "tags": [
                    "Applications"
                ],
                "summary": "Get list of applications",
                "operationId": "64f3f2042939df74fe5a6565cb6e675a",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Applications retrieved successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "app_id": {
                                                        "type": "string",
                                                        "format": "uuid"
                                                    },
                                                    "app_name": {
                                                        "type": "string",
                                                        "example": "Test App"
                                                    },
                                                    "app_url": {
                                                        "type": "string",
                                                        "example": "https://test.com"
                                                    },
                                                    "platform": {
                                                        "type": "string",
                                                        "example": "web"
                                                    },
                                                    "description": {
                                                        "type": "string",
                                                        "example": "Description"
                                                    },
                                                    "status": {
                                                        "type": "string",
                                                        "example": "pending"
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "datetime"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Applications"
                ],
                "summary": "Create new application",
                "operationId": "2b57cdaaa2f01ca15e070687f10ad613",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "client_id",
                                    "app_name",
                                    "app_url",
                                    "platform",
                                    "description",
                                    "status"
                                ],
                                "properties": {
                                    "client_id": {
                                        "type": "string",
                                        "format": "uuid"
                                    },
                                    "app_name": {
                                        "type": "string",
                                        "example": "Test App"
                                    },
                                    "app_url": {
                                        "type": "string",
                                        "example": "https://test.com"
                                    },
                                    "platform": {
                                        "type": "string",
                                        "example": "web"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Description"
                                    },
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "pending",
                                            "active",
                                            "completed"
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Application created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Application created successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "app_id": {
                                                    "type": "string",
                                                    "format": "uuid"
                                                },
                                                "app_name": {
                                                    "type": "string",
                                                    "example": "Test App"
                                                },
                                                "app_url": {
                                                    "type": "string",
                                                    "example": "https://test.com"
                                                },
                                                "platform": {
                                                    "type": "string",
                                                    "example": "web"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "Description"
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "example": "pending"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "datetime"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/applications/{id}": {
            "get": {
                "tags": [
                    "Applications"
                ],
                "summary": "Get specific application",
                "operationId": "edab74d85138e1e186027e29d17b6447",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Application retrieved successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "app_id": {
                                                    "type": "string",
                                                    "format": "uuid"
                                                },
                                                "app_name": {
                                                    "type": "string",
                                                    "example": "Test App"
                                                },
                                                "app_url": {
                                                    "type": "string",
                                                    "example": "https://test.com"
                                                },
                                                "platform": {
                                                    "type": "string",
                                                    "example": "web"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "Description"
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "example": "pending"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "datetime"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Application not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Applications"
                ],
                "summary": "Update application",
                "operationId": "9943e82ac263cf8238cb53f7ef5eefa2",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "client_id": {
                                        "type": "string",
                                        "format": "uuid"
                                    },
                                    "app_name": {
                                        "type": "string",
                                        "example": "Updated App"
                                    },
                                    "app_url": {
                                        "type": "string",
                                        "example": "https://updated.com"
                                    },
                                    "platform": {
                                        "type": "string",
                                        "example": "android"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Updated description"
                                    },
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "pending",
                                            "active",
                                            "completed"
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Application updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Application updated successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "app_id": {
                                                    "type": "string",
                                                    "format": "uuid"
                                                },
                                                "app_name": {
                                                    "type": "string",
                                                    "example": "Updated App"
                                                },
                                                "app_url": {
                                                    "type": "string",
                                                    "example": "https://updated.com"
                                                },
                                                "platform": {
                                                    "type": "string",
                                                    "example": "android"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "Updated description"
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "example": "active"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "datetime"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Application not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Applications"
                ],
                "summary": "Delete application",
                "operationId": "4a5c70173c29e8c7ff961fb1bc1b517a",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Application deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Application deleted successfully"
                                        },
                                        "data": {
                                            "type": "null"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Application not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/register": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Register a new user",
                "description": "Creates a new user based on the provided user type",
                "operationId": "registerUser",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "password",
                                    "password_confirmation",
                                    "user_type"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    },
                                    "user_type": {
                                        "type": "string",
                                        "enum": [
                                            "client",
                                            "crowdworker",
                                            "qa_specialist"
                                        ],
                                        "example": "client"
                                    },
                                    "company": {
                                        "description": "Required for client user type",
                                        "type": "string",
                                        "example": "Acme Inc"
                                    },
                                    "skills": {
                                        "description": "Required for crowdworker user type",
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        },
                                        "example": [
                                            "testing",
                                            "automation"
                                        ]
                                    },
                                    "expertise": {
                                        "description": "Required for qa_specialist user type",
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        },
                                        "example": [
                                            "web",
                                            "mobile"
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User registered successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User registered successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "user": {
                                                    "type": "object"
                                                },
                                                "token": {
                                                    "type": "string",
                                                    "example": "6|laravel_sanctum_token..."
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error or invalid user type",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Log in a user",
                "description": "Authenticates a user and returns a token",
                "operationId": "loginUser",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Logged in successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Logged in successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "user": {
                                                    "type": "object"
                                                },
                                                "token": {
                                                    "type": "string",
                                                    "example": "6|laravel_sanctum_token..."
                                                },
                                                "role": {
                                                    "description": "User role: client, crowdworker, or qa_specialist",
                                                    "type": "string",
                                                    "example": "client"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid credentials"
                                        },
                                        "data": {
                                            "type": "null",
                                            "example": null
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Log out a user",
                "description": "Revokes the current access token",
                "operationId": "logoutUser",
                "responses": {
                    "200": {
                        "description": "Logged out successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Logged out successfully"
                                        },
                                        "data": {
                                            "type": "null",
                                            "example": null
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/bug-reports": {
            "get": {
                "tags": [
                    "Bug Reports"
                ],
                "summary": "Get list of bug reports",
                "description": "Returns a list of all bug reports",
                "operationId": "4d65b30f38abe569f372495b36b8dd32",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Bug reports retrieved successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "bug_id": {
                                                        "type": "string",
                                                        "format": "uuid"
                                                    },
                                                    "task_id": {
                                                        "type": "string",
                                                        "format": "uuid"
                                                    },
                                                    "worker_id": {
                                                        "type": "string",
                                                        "format": "uuid"
                                                    },
                                                    "bug_description": {
                                                        "type": "string",
                                                        "example": "Button not working"
                                                    },
                                                    "steps_to_reproduce": {
                                                        "type": "string",
                                                        "example": "1. Click login\\n2. Enter credentials\\n3. Click submit"
                                                    },
                                                    "severity": {
                                                        "type": "string",
                                                        "enum": [
                                                            "Low",
                                                            "Medium",
                                                            "High",
                                                            "Critical"
                                                        ],
                                                        "example": "High"
                                                    },
                                                    "screenshot_url": {
                                                        "type": "string",
                                                        "example": "https://example.com/screenshot.jpg",
                                                        "nullable": true
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "datetime",
                                                        "example": "2025-03-12 10:00:00"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "format": "datetime",
                                                        "example": "2025-03-12 10:00:00"
                                                    },
                                                    "validation_status": {
                                                        "type": "string",
                                                        "example": "Pending"
                                                    },
                                                    "uat_task": {
                                                        "properties": {
                                                            "task_id": {
                                                                "type": "string",
                                                                "format": "uuid"
                                                            },
                                                            "title": {
                                                                "type": "string",
                                                                "example": "Test Login Feature"
                                                            },
                                                            "description": {
                                                                "type": "string",
                                                                "example": "Test the login functionality"
                                                            }
                                                        },
                                                        "type": "object",
                                                        "nullable": true
                                                    },
                                                    "crowdworker": {
                                                        "properties": {
                                                            "worker_id": {
                                                                "type": "string",
                                                                "format": "uuid"
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "John Doe"
                                                            },
                                                            "email": {
                                                                "type": "string",
                                                                "example": "john@example.com"
                                                            }
                                                        },
                                                        "type": "object",
                                                        "nullable": true
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Bug Reports"
                ],
                "summary": "Create new bug report",
                "description": "Creates a new bug report",
                "operationId": "cf509abeee3d76483de4898ab72946cd",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "task_id",
                                    "worker_id",
                                    "bug_description",
                                    "steps_to_reproduce",
                                    "severity"
                                ],
                                "properties": {
                                    "task_id": {
                                        "type": "string",
                                        "format": "uuid"
                                    },
                                    "worker_id": {
                                        "type": "string",
                                        "format": "uuid"
                                    },
                                    "bug_description": {
                                        "type": "string",
                                        "example": "Login button not working"
                                    },
                                    "steps_to_reproduce": {
                                        "type": "string",
                                        "example": "1. Go to login page\\n2. Click login"
                                    },
                                    "severity": {
                                        "type": "string",
                                        "enum": [
                                            "Low",
                                            "Medium",
                                            "High",
                                            "Critical"
                                        ],
                                        "example": "High"
                                    },
                                    "screenshot_url": {
                                        "type": "string",
                                        "example": "https://example.com/screenshot.jpg",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Bug report created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Bug report created successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "bug_id": {
                                                    "type": "string",
                                                    "format": "uuid"
                                                },
                                                "task_id": {
                                                    "type": "string",
                                                    "format": "uuid"
                                                },
                                                "worker_id": {
                                                    "type": "string",
                                                    "format": "uuid"
                                                },
                                                "bug_description": {
                                                    "type": "string",
                                                    "example": "Button not working"
                                                },
                                                "steps_to_reproduce": {
                                                    "type": "string",
                                                    "example": "1. Click login\\n2. Enter credentials\\n3. Click submit"
                                                },
                                                "severity": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Low",
                                                        "Medium",
                                                        "High",
                                                        "Critical"
                                                    ],
                                                    "example": "High"
                                                },
                                                "screenshot_url": {
                                                    "type": "string",
                                                    "example": "https://example.com/screenshot.jpg",
                                                    "nullable": true
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "datetime",
                                                    "example": "2025-03-12 10:00:00"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "datetime",
                                                    "example": "2025-03-12 10:00:00"
                                                },
                                                "validation_status": {
                                                    "type": "string",
                                                    "example": "Pending"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid"
                                        },
                                        "errors": {
                                            "properties": {
                                                "task_id": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The task id field is required"
                                                    }
                                                },
                                                "severity": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The severity field must be one of: Low, Medium, High, Critical"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/bug-reports/{id}": {
            "get": {
                "tags": [
                    "Bug Reports"
                ],
                "summary": "Get specific bug report",
                "description": "Returns details of a specific bug report",
                "operationId": "169e56cdbaf6b3886186128b0bef406b",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Bug report ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Bug report retrieved successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "bug_id": {
                                                    "type": "string",
                                                    "format": "uuid"
                                                },
                                                "task_id": {
                                                    "type": "string",
                                                    "format": "uuid"
                                                },
                                                "worker_id": {
                                                    "type": "string",
                                                    "format": "uuid"
                                                },
                                                "bug_description": {
                                                    "type": "string",
                                                    "example": "Button not working"
                                                },
                                                "steps_to_reproduce": {
                                                    "type": "string",
                                                    "example": "1. Click login\\n2. Enter credentials\\n3. Click submit"
                                                },
                                                "severity": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Low",
                                                        "Medium",
                                                        "High",
                                                        "Critical"
                                                    ],
                                                    "example": "High"
                                                },
                                                "screenshot_url": {
                                                    "type": "string",
                                                    "example": "https://example.com/screenshot.jpg",
                                                    "nullable": true
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "datetime",
                                                    "example": "2025-03-12 10:00:00"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "datetime",
                                                    "example": "2025-03-12 10:00:00"
                                                },
                                                "validation_status": {
                                                    "type": "string",
                                                    "example": "Pending"
                                                },
                                                "uat_task": {
                                                    "properties": {
                                                        "task_id": {
                                                            "type": "string",
                                                            "format": "uuid"
                                                        },
                                                        "title": {
                                                            "type": "string",
                                                            "example": "Test Login Feature"
                                                        },
                                                        "description": {
                                                            "type": "string",
                                                            "example": "Test the login functionality"
                                                        }
                                                    },
                                                    "type": "object",
                                                    "nullable": true
                                                },
                                                "crowdworker": {
                                                    "properties": {
                                                        "worker_id": {
                                                            "type": "string",
                                                            "format": "uuid"
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "John Doe"
                                                        },
                                                        "email": {
                                                            "type": "string",
                                                            "example": "john@example.com"
                                                        }
                                                    },
                                                    "type": "object",
                                                    "nullable": true
                                                },
                                                "validation": {
                                                    "properties": {
                                                        "validation_id": {
                                                            "type": "string",
                                                            "format": "uuid"
                                                        },
                                                        "validation_status": {
                                                            "type": "string",
                                                            "example": "Pending"
                                                        },
                                                        "validator_notes": {
                                                            "type": "string",
                                                            "example": "Under review"
                                                        }
                                                    },
                                                    "type": "object",
                                                    "nullable": true
                                                },
                                                "application": {
                                                    "properties": {
                                                        "app_id": {
                                                            "type": "string",
                                                            "format": "uuid"
                                                        },
                                                        "app_name": {
                                                            "type": "string",
                                                            "example": "Test Application"
                                                        },
                                                        "platform": {
                                                            "type": "string",
                                                            "example": "web"
                                                        }
                                                    },
                                                    "type": "object",
                                                    "nullable": true
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Bug report not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Bug report not found"
                                        },
                                        "data": {
                                            "type": "null"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Bug Reports"
                ],
                "summary": "Update bug report",
                "description": "Updates an existing bug report",
                "operationId": "6da7b3422febff76103b7d647f3ae088",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Bug report ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "task_id": {
                                        "type": "string",
                                        "format": "uuid"
                                    },
                                    "worker_id": {
                                        "type": "string",
                                        "format": "uuid"
                                    },
                                    "bug_description": {
                                        "type": "string",
                                        "example": "Updated: Button not working after recent changes"
                                    },
                                    "steps_to_reproduce": {
                                        "type": "string",
                                        "example": "1. Clear cache\\n2. Click login\\n3. Enter credentials"
                                    },
                                    "severity": {
                                        "type": "string",
                                        "enum": [
                                            "Low",
                                            "Medium",
                                            "High",
                                            "Critical"
                                        ],
                                        "example": "Critical"
                                    },
                                    "screenshot_url": {
                                        "type": "string",
                                        "example": "https://example.com/updated-screenshot.jpg",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Bug report updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Bug report updated successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "bug_id": {
                                                    "type": "string",
                                                    "format": "uuid"
                                                },
                                                "task_id": {
                                                    "type": "string",
                                                    "format": "uuid"
                                                },
                                                "worker_id": {
                                                    "type": "string",
                                                    "format": "uuid"
                                                },
                                                "bug_description": {
                                                    "type": "string",
                                                    "example": "Updated: Button not working"
                                                },
                                                "steps_to_reproduce": {
                                                    "type": "string",
                                                    "example": "1. Clear cache\\n2. Click login"
                                                },
                                                "severity": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Low",
                                                        "Medium",
                                                        "High",
                                                        "Critical"
                                                    ],
                                                    "example": "Critical"
                                                },
                                                "screenshot_url": {
                                                    "type": "string",
                                                    "nullable": true
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "datetime",
                                                    "example": "2025-03-12 10:00:00"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "datetime",
                                                    "example": "2025-03-12 10:00:00"
                                                },
                                                "validation_status": {
                                                    "type": "string",
                                                    "example": "Pending"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Bug report not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Bug report not found"
                                        },
                                        "data": {
                                            "type": "null"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid"
                                        },
                                        "errors": {
                                            "properties": {
                                                "severity": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The severity field must be one of: Low, Medium, High, Critical"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Bug Reports"
                ],
                "summary": "Delete bug report",
                "description": "Deletes a specific bug report",
                "operationId": "affe6a777959cab8019c0b607da0503c",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Bug report ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Bug report deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Bug report deleted successfully"
                                        },
                                        "data": {
                                            "type": "null"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Bug report not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Bug report not found"
                                        },
                                        "data": {
                                            "type": "null"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/bug-reports/by-severity/{severity}": {
            "get": {
                "tags": [
                    "Bug Reports"
                ],
                "summary": "Get bug reports by severity",
                "description": "Returns a list of bug reports filtered by severity level",
                "operationId": "9f7ea0a97a0c28ff6a48de28735c3eaa",
                "parameters": [
                    {
                        "name": "severity",
                        "in": "path",
                        "description": "Severity level to filter by",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "Low",
                                "Medium",
                                "High",
                                "Critical"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Bug reports retrieved successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "bug_id": {
                                                        "type": "string",
                                                        "format": "uuid"
                                                    },
                                                    "task_id": {
                                                        "type": "string",
                                                        "format": "uuid"
                                                    },
                                                    "worker_id": {
                                                        "type": "string",
                                                        "format": "uuid"
                                                    },
                                                    "bug_description": {
                                                        "type": "string",
                                                        "example": "Button not working"
                                                    },
                                                    "steps_to_reproduce": {
                                                        "type": "string",
                                                        "example": "1. Click login\\n2. Enter credentials"
                                                    },
                                                    "severity": {
                                                        "type": "string",
                                                        "enum": [
                                                            "Low",
                                                            "Medium",
                                                            "High",
                                                            "Critical"
                                                        ],
                                                        "example": "High"
                                                    },
                                                    "screenshot_url": {
                                                        "type": "string",
                                                        "nullable": true
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "datetime",
                                                        "example": "2025-03-12 10:00:00"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "format": "datetime",
                                                        "example": "2025-03-12 10:00:00"
                                                    },
                                                    "validation_status": {
                                                        "type": "string",
                                                        "example": "Pending"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid severity level",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid severity level"
                                        },
                                        "data": {
                                            "type": "null"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/bug-validations": {
            "get": {
                "tags": [
                    "Bug Validations"
                ],
                "summary": "Get list of bug validations",
                "description": "Returns a list of all bug validations",
                "operationId": "99b5d1971afaa60f29c0dc7dcda8d238",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Bug validations retrieved successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "validation_id": {
                                                        "type": "string",
                                                        "format": "uuid"
                                                    },
                                                    "bug_id": {
                                                        "type": "string",
                                                        "format": "uuid"
                                                    },
                                                    "qa_id": {
                                                        "type": "string",
                                                        "format": "uuid"
                                                    },
                                                    "validation_status": {
                                                        "type": "string",
                                                        "enum": [
                                                            "Valid",
                                                            "Invalid",
                                                            "Needs More Info"
                                                        ],
                                                        "example": "Valid"
                                                    },
                                                    "comments": {
                                                        "type": "string",
                                                        "example": "Bug verified and reproducible"
                                                    },
                                                    "validated_at": {
                                                        "type": "string",
                                                        "format": "datetime",
                                                        "nullable": true
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "datetime"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "format": "datetime"
                                                    },
                                                    "validation_time": {
                                                        "type": "integer",
                                                        "example": 60,
                                                        "nullable": true
                                                    },
                                                    "application_details": {
                                                        "properties": {
                                                            "app_name": {
                                                                "type": "string",
                                                                "example": "Test Application"
                                                            },
                                                            "app_id": {
                                                                "type": "string",
                                                                "format": "uuid"
                                                            }
                                                        },
                                                        "type": "object",
                                                        "nullable": true
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Bug Validations"
                ],
                "summary": "Create new bug validation",
                "description": "Creates a new bug validation",
                "operationId": "c4d75c18852c8381adc737ff31f15804",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "bug_id",
                                    "qa_id",
                                    "validation_status",
                                    "comments"
                                ],
                                "properties": {
                                    "bug_id": {
                                        "type": "string",
                                        "format": "uuid"
                                    },
                                    "qa_id": {
                                        "type": "string",
                                        "format": "uuid"
                                    },
                                    "validation_status": {
                                        "type": "string",
                                        "enum": [
                                            "Valid",
                                            "Invalid",
                                            "Needs More Info"
                                        ],
                                        "example": "Valid"
                                    },
                                    "comments": {
                                        "type": "string",
                                        "example": "Bug verified and reproducible"
                                    },
                                    "validated_at": {
                                        "type": "string",
                                        "format": "datetime",
                                        "example": "2025-03-12 10:00:00",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Bug validation created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Bug validation created successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "validation_id": {
                                                    "type": "string",
                                                    "format": "uuid"
                                                },
                                                "bug_id": {
                                                    "type": "string",
                                                    "format": "uuid"
                                                },
                                                "qa_id": {
                                                    "type": "string",
                                                    "format": "uuid"
                                                },
                                                "validation_status": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Valid",
                                                        "Invalid",
                                                        "Needs More Info"
                                                    ],
                                                    "example": "Valid"
                                                },
                                                "comments": {
                                                    "type": "string",
                                                    "example": "Bug verified and reproducible"
                                                },
                                                "validated_at": {
                                                    "type": "string",
                                                    "format": "datetime"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "datetime"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "datetime"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid"
                                        },
                                        "errors": {
                                            "properties": {
                                                "bug_id": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The bug id field is required"
                                                    }
                                                },
                                                "validation_status": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The validation status must be one of: Valid, Invalid, Needs More Info"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/bug-validations/{id}": {
            "get": {
                "tags": [
                    "Bug Validations"
                ],
                "summary": "Get specific bug validation",
                "description": "Returns details of a specific bug validation",
                "operationId": "0b6e63bdd4fb624a4576ce58c9d292d7",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Bug validation ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Bug validation retrieved successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "validation_id": {
                                                    "type": "string",
                                                    "format": "uuid"
                                                },
                                                "bug_id": {
                                                    "type": "string",
                                                    "format": "uuid"
                                                },
                                                "qa_id": {
                                                    "type": "string",
                                                    "format": "uuid"
                                                },
                                                "validation_status": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Valid",
                                                        "Invalid",
                                                        "Needs More Info"
                                                    ],
                                                    "example": "Valid"
                                                },
                                                "comments": {
                                                    "type": "string",
                                                    "example": "Bug verified and reproducible"
                                                },
                                                "validated_at": {
                                                    "type": "string",
                                                    "format": "datetime"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "datetime"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "datetime"
                                                },
                                                "validation_time": {
                                                    "type": "integer",
                                                    "example": 60
                                                },
                                                "bug_report": {
                                                    "properties": {
                                                        "bug_id": {
                                                            "type": "string",
                                                            "format": "uuid"
                                                        },
                                                        "description": {
                                                            "type": "string",
                                                            "example": "Login button not working"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "qa_specialist": {
                                                    "properties": {
                                                        "qa_id": {
                                                            "type": "string",
                                                            "format": "uuid"
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "John Doe"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "application_details": {
                                                    "properties": {
                                                        "app_name": {
                                                            "type": "string",
                                                            "example": "Test Application"
                                                        },
                                                        "app_id": {
                                                            "type": "string",
                                                            "format": "uuid"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Bug validation not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Bug validation not found"
                                        },
                                        "data": {
                                            "type": "null"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Bug Validations"
                ],
                "summary": "Update bug validation",
                "description": "Updates an existing bug validation",
                "operationId": "962af1cc9a08bfa333e971fd75cdbd33",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Bug validation ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "qa_id": {
                                        "type": "string",
                                        "format": "uuid"
                                    },
                                    "validation_status": {
                                        "type": "string",
                                        "enum": [
                                            "Valid",
                                            "Invalid",
                                            "Needs More Info"
                                        ],
                                        "example": "Valid"
                                    },
                                    "comments": {
                                        "type": "string",
                                        "example": "Updated: Bug verified and reproducible"
                                    },
                                    "validated_at": {
                                        "type": "string",
                                        "format": "datetime",
                                        "example": "2025-03-12 10:00:00",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Bug validation updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Bug validation updated successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "validation_id": {
                                                    "type": "string",
                                                    "format": "uuid"
                                                },
                                                "bug_id": {
                                                    "type": "string",
                                                    "format": "uuid"
                                                },
                                                "qa_id": {
                                                    "type": "string",
                                                    "format": "uuid"
                                                },
                                                "validation_status": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Valid",
                                                        "Invalid",
                                                        "Needs More Info"
                                                    ],
                                                    "example": "Valid"
                                                },
                                                "comments": {
                                                    "type": "string",
                                                    "example": "Updated: Bug verified and reproducible"
                                                },
                                                "validated_at": {
                                                    "type": "string",
                                                    "format": "datetime"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "datetime"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "datetime"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Bug validation not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Bug validation not found"
                                        },
                                        "data": {
                                            "type": "null"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid"
                                        },
                                        "errors": {
                                            "properties": {
                                                "validation_status": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The validation status must be one of: Valid, Invalid, Needs More Info"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Bug Validations"
                ],
                "summary": "Delete bug validation",
                "description": "Deletes a specific bug validation",
                "operationId": "175d049bd05ae43c6458c09408d25882",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Bug validation ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Bug validation deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Bug validation deleted successfully"
                                        },
                                        "data": {
                                            "type": "null"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Bug validation not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Bug validation not found"
                                        },
                                        "data": {
                                            "type": "null"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/bug-validations/pending": {
            "get": {
                "tags": [
                    "Bug Validations"
                ],
                "summary": "Get list of pending bug validations",
                "description": "Returns a list of bug validations with pending status",
                "operationId": "e4c53ca2d5f481e2cd6e5ea6b0a410b8",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Pending bug validations retrieved successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "validation_id": {
                                                        "type": "string",
                                                        "format": "uuid"
                                                    },
                                                    "bug_id": {
                                                        "type": "string",
                                                        "format": "uuid"
                                                    },
                                                    "qa_id": {
                                                        "type": "string",
                                                        "format": "uuid"
                                                    },
                                                    "validation_status": {
                                                        "type": "string",
                                                        "enum": [
                                                            "Valid",
                                                            "Invalid",
                                                            "Needs More Info"
                                                        ],
                                                        "example": "Needs More Info"
                                                    },
                                                    "comments": {
                                                        "type": "string",
                                                        "example": "Awaiting additional information"
                                                    },
                                                    "validated_at": {
                                                        "type": "string",
                                                        "format": "datetime",
                                                        "nullable": true
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "datetime"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "format": "datetime"
                                                    },
                                                    "bug_report": {
                                                        "properties": {
                                                            "bug_id": {
                                                                "type": "string",
                                                                "format": "uuid"
                                                            },
                                                            "description": {
                                                                "type": "string",
                                                                "example": "Login issue"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/clients": {
            "get": {
                "tags": [
                    "Clients"
                ],
                "summary": "Get list of clients",
                "description": "Returns a list of all clients",
                "operationId": "6536f8d22d25758c3e14dbbe8e228af0",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Clients retrieved successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "client_id": {
                                                        "type": "string",
                                                        "format": "uuid"
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "John Doe"
                                                    },
                                                    "email": {
                                                        "type": "string",
                                                        "format": "email",
                                                        "example": "john@example.com"
                                                    },
                                                    "company": {
                                                        "type": "string",
                                                        "example": "Acme Inc"
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "datetime"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "format": "datetime"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Clients"
                ],
                "summary": "Create new client",
                "description": "Creates a new client",
                "operationId": "74a35b85418e09c2489915865dd22445",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "password",
                                    "password_confirmation",
                                    "company"
                                ],
                                "properties": {
                                    "name": {
                                        "description": "Name of the client",
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "description": "Email address of the client",
                                        "type": "string",
                                        "format": "email",
                                        "example": "john@example.com"
                                    },
                                    "password": {
                                        "description": "Password for the account",
                                        "type": "string",
                                        "format": "password",
                                        "minLength": 8,
                                        "example": "password123"
                                    },
                                    "password_confirmation": {
                                        "description": "Password confirmation",
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    },
                                    "company": {
                                        "description": "Company name of the client",
                                        "type": "string",
                                        "example": "Acme Inc"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Client created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Client created successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "client_id": {
                                                    "type": "string",
                                                    "format": "uuid"
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "John Doe"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "format": "email",
                                                    "example": "john@example.com"
                                                },
                                                "company": {
                                                    "type": "string",
                                                    "example": "Acme Inc"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "datetime",
                                                    "example": "2025-03-12 10:00:00"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "datetime",
                                                    "example": "2025-03-12 10:00:00"
                                                },
                                                "applications": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "app_id": {
                                                                "type": "string",
                                                                "format": "uuid"
                                                            },
                                                            "app_name": {
                                                                "type": "string",
                                                                "example": "Test App"
                                                            },
                                                            "app_url": {
                                                                "type": "string",
                                                                "example": "https://testapp.com"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "nullable": true
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid"
                                        },
                                        "errors": {
                                            "properties": {
                                                "email": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The email has already been taken"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/clients/{id}": {
            "get": {
                "tags": [
                    "Clients"
                ],
                "summary": "Get specific client",
                "description": "Returns details of a specific client",
                "operationId": "1837c830668b0f7aa87761172e9a8cf9",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Client ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Client retrieved successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "client_id": {
                                                    "type": "string",
                                                    "format": "uuid"
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "John Doe"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "format": "email",
                                                    "example": "john@example.com"
                                                },
                                                "company": {
                                                    "type": "string",
                                                    "example": "Acme Inc"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "datetime",
                                                    "example": "2025-03-12 10:00:00"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "datetime",
                                                    "example": "2025-03-12 10:00:00"
                                                },
                                                "applications": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "app_id": {
                                                                "type": "string",
                                                                "format": "uuid"
                                                            },
                                                            "app_name": {
                                                                "type": "string",
                                                                "example": "Test Application"
                                                            },
                                                            "app_url": {
                                                                "type": "string",
                                                                "example": "https://testapp.com"
                                                            },
                                                            "platform": {
                                                                "type": "string",
                                                                "example": "web"
                                                            },
                                                            "description": {
                                                                "type": "string",
                                                                "example": "Test application description"
                                                            },
                                                            "status": {
                                                                "type": "string",
                                                                "example": "active"
                                                            },
                                                            "created_at": {
                                                                "type": "string",
                                                                "format": "datetime",
                                                                "example": "2025-03-12 10:00:00"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "nullable": true
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Client not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Client not found"
                                        },
                                        "data": {
                                            "type": "null"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Clients"
                ],
                "summary": "Update client",
                "description": "Updates an existing client",
                "operationId": "1ee17ab59b59dd0a816f385b724d2b6c",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Client ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "description": "Updated name of the client",
                                        "type": "string",
                                        "example": "John Doe Updated"
                                    },
                                    "email": {
                                        "description": "Updated email address of the client",
                                        "type": "string",
                                        "format": "email",
                                        "example": "john.updated@example.com"
                                    },
                                    "password": {
                                        "description": "New password (optional)",
                                        "type": "string",
                                        "format": "password",
                                        "minLength": 8,
                                        "example": "newpassword123"
                                    },
                                    "password_confirmation": {
                                        "description": "New password confirmation",
                                        "type": "string",
                                        "format": "password",
                                        "example": "newpassword123"
                                    },
                                    "company": {
                                        "description": "Updated company name of the client",
                                        "type": "string",
                                        "example": "Acme Corp Updated"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Client updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Client updated successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "client_id": {
                                                    "type": "string",
                                                    "format": "uuid"
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "John Doe Updated"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "format": "email",
                                                    "example": "john.updated@example.com"
                                                },
                                                "company": {
                                                    "type": "string",
                                                    "example": "Acme Corp Updated"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "datetime",
                                                    "example": "2025-03-12 10:00:00"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "datetime",
                                                    "example": "2025-03-12 10:00:00"
                                                },
                                                "applications": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "app_id": {
                                                                "type": "string",
                                                                "format": "uuid"
                                                            },
                                                            "app_name": {
                                                                "type": "string",
                                                                "example": "Test Application"
                                                            },
                                                            "app_url": {
                                                                "type": "string",
                                                                "example": "https://testapp.com"
                                                            },
                                                            "platform": {
                                                                "type": "string",
                                                                "example": "web"
                                                            },
                                                            "status": {
                                                                "type": "string",
                                                                "example": "active"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "nullable": true
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Client not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Client not found"
                                        },
                                        "data": {
                                            "type": "null"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid"
                                        },
                                        "errors": {
                                            "properties": {
                                                "email": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The email has already been taken"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Clients"
                ],
                "summary": "Delete client",
                "description": "Deletes a specific client",
                "operationId": "3505fe07e8722ba21177850f874211f2",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Client ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Client deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Client deleted successfully"
                                        },
                                        "data": {
                                            "type": "null"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Client not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Client not found"
                                        },
                                        "data": {
                                            "type": "null"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/crowdworkers": {
            "get": {
                "tags": [
                    "Crowdworkers"
                ],
                "summary": "Get list of crowdworkers",
                "description": "Returns a list of all crowdworkers",
                "operationId": "973f763318460e80acaa13736594d58b",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Crowdworkers retrieved successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "worker_id": {
                                                        "type": "string",
                                                        "format": "uuid"
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "John Doe"
                                                    },
                                                    "email": {
                                                        "type": "string",
                                                        "format": "email",
                                                        "example": "john@example.com"
                                                    },
                                                    "skills": {
                                                        "type": "string",
                                                        "example": "Web Testing, Mobile Testing"
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "datetime"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "format": "datetime"
                                                    },
                                                    "completed_tasks_count": {
                                                        "type": "integer",
                                                        "example": 5
                                                    },
                                                    "total_bug_reports": {
                                                        "type": "integer",
                                                        "example": 10
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Crowdworkers"
                ],
                "summary": "Create new crowdworker",
                "description": "Creates a new crowdworker account",
                "operationId": "e04c4b2e1cc5c6d76f88ad821d9dadb0",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "skills",
                                    "password",
                                    "password_confirmation"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john@example.com"
                                    },
                                    "skills": {
                                        "type": "string",
                                        "example": "Web Testing, Mobile Testing"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Crowdworker created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Crowdworker created successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "worker_id": {
                                                    "type": "string",
                                                    "format": "uuid"
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "John Doe"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "format": "email",
                                                    "example": "john@example.com"
                                                },
                                                "skills": {
                                                    "type": "string",
                                                    "example": "Web Testing, Mobile Testing"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "datetime"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "datetime"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid"
                                        },
                                        "errors": {
                                            "properties": {
                                                "email": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The email has already been taken"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/crowdworkers/{id}": {
            "get": {
                "tags": [
                    "Crowdworkers"
                ],
                "summary": "Get specific crowdworker",
                "description": "Returns details of a specific crowdworker",
                "operationId": "7d4fa1e0b0ca677d1f89f229aea3f64d",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Crowdworker ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Crowdworker retrieved successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "worker_id": {
                                                    "type": "string",
                                                    "format": "uuid"
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "John Doe"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "format": "email",
                                                    "example": "john@example.com"
                                                },
                                                "skills": {
                                                    "type": "string",
                                                    "example": "Web Testing, Mobile Testing"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "datetime"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "datetime"
                                                },
                                                "completed_tasks_count": {
                                                    "type": "integer",
                                                    "example": 5
                                                },
                                                "total_bug_reports": {
                                                    "type": "integer",
                                                    "example": 10
                                                },
                                                "uat_tasks": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "task_id": {
                                                                "type": "string",
                                                                "format": "uuid"
                                                            },
                                                            "title": {
                                                                "type": "string",
                                                                "example": "Test Login Feature"
                                                            },
                                                            "status": {
                                                                "type": "string",
                                                                "example": "Completed"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "bug_reports": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "bug_id": {
                                                                "type": "string",
                                                                "format": "uuid"
                                                            },
                                                            "description": {
                                                                "type": "string",
                                                                "example": "Login button not working"
                                                            },
                                                            "severity": {
                                                                "type": "string",
                                                                "example": "High"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Crowdworker not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Crowdworkers"
                ],
                "summary": "Update crowdworker",
                "description": "Updates an existing crowdworker",
                "operationId": "8b26281dadf69243420aba27876c3dee",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Crowdworker ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe Updated"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john.updated@example.com"
                                    },
                                    "skills": {
                                        "type": "string",
                                        "example": "Web Testing, Mobile Testing, API Testing"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "newpassword123"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "newpassword123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Crowdworker updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Crowdworker updated successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "worker_id": {
                                                    "type": "string",
                                                    "format": "uuid"
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "John Doe Updated"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "format": "email",
                                                    "example": "john.updated@example.com"
                                                },
                                                "skills": {
                                                    "type": "string",
                                                    "example": "Web Testing, Mobile Testing, API Testing"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "datetime"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "datetime"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Crowdworker not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Crowdworkers"
                ],
                "summary": "Delete crowdworker",
                "description": "Deletes a specific crowdworker",
                "operationId": "eee57426a639d8a2b8761657eb139709",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Crowdworker ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Crowdworker deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Crowdworker deleted successfully"
                                        },
                                        "data": {
                                            "type": "null"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Crowdworker not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/qa-specialists": {
            "get": {
                "tags": [
                    "QA Specialists"
                ],
                "summary": "Get list of QA specialists",
                "description": "Returns a paginated list of all QA specialists",
                "operationId": "efca913dd17c955752dc2343d0b32165",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 15
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search by name or email",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "QA Specialists retrieved successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "items": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "qa_id": {
                                                                "type": "string",
                                                                "format": "uuid"
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "Jane Smith"
                                                            },
                                                            "email": {
                                                                "type": "string",
                                                                "format": "email",
                                                                "example": "jane@example.com"
                                                            },
                                                            "expertise": {
                                                                "type": "string",
                                                                "example": "Web Testing, Security Testing"
                                                            },
                                                            "created_at": {
                                                                "type": "string",
                                                                "format": "datetime",
                                                                "example": "2025-03-12 10:00:00"
                                                            },
                                                            "test_cases": {
                                                                "type": "array",
                                                                "items": {
                                                                    "properties": {
                                                                        "test_case_id": {
                                                                            "type": "string",
                                                                            "format": "uuid"
                                                                        },
                                                                        "title": {
                                                                            "type": "string",
                                                                            "example": "Login Functionality Test"
                                                                        },
                                                                        "status": {
                                                                            "type": "string",
                                                                            "example": "Approved"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "nullable": true
                                                            },
                                                            "bug_validations": {
                                                                "type": "array",
                                                                "items": {
                                                                    "properties": {
                                                                        "validation_id": {
                                                                            "type": "string",
                                                                            "format": "uuid"
                                                                        },
                                                                        "bug_id": {
                                                                            "type": "string",
                                                                            "format": "uuid"
                                                                        },
                                                                        "status": {
                                                                            "type": "string",
                                                                            "example": "Verified"
                                                                        },
                                                                        "comments": {
                                                                            "type": "string",
                                                                            "example": "Bug verified and confirmed"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "nullable": true
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "current_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "example": 15
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "example": 50
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "QA Specialists"
                ],
                "summary": "Create new QA specialist",
                "description": "Creates a new QA specialist account",
                "operationId": "acefe71347c5cca424463ef4075a8cb1",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "expertise",
                                    "password",
                                    "password_confirmation"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Jane Smith"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "jane@example.com"
                                    },
                                    "expertise": {
                                        "type": "string",
                                        "example": "Web Testing, Security Testing"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "QA Specialist created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "QA Specialist created successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "qa_id": {
                                                    "type": "string",
                                                    "format": "uuid"
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Jane Smith"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "format": "email",
                                                    "example": "jane@example.com"
                                                },
                                                "expertise": {
                                                    "type": "string",
                                                    "example": "Web Testing, Security Testing"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "datetime",
                                                    "example": "2025-03-12 10:00:00"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid"
                                        },
                                        "errors": {
                                            "properties": {
                                                "email": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The email has already been taken"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/qa-specialists/{id}": {
            "get": {
                "tags": [
                    "QA Specialists"
                ],
                "summary": "Get specific QA specialist",
                "description": "Returns details of a specific QA specialist",
                "operationId": "32dadb1842682cf38bb83307f73bb092",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "QA Specialist ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "QA Specialist retrieved successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "qa_id": {
                                                    "type": "string",
                                                    "format": "uuid"
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Jane Smith"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "format": "email",
                                                    "example": "jane@example.com"
                                                },
                                                "expertise": {
                                                    "type": "string",
                                                    "example": "Web Testing, Security Testing"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "datetime",
                                                    "example": "2025-03-12 10:00:00"
                                                },
                                                "test_cases": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "test_case_id": {
                                                                "type": "string",
                                                                "format": "uuid"
                                                            },
                                                            "title": {
                                                                "type": "string",
                                                                "example": "Login Functionality Test"
                                                            },
                                                            "status": {
                                                                "type": "string",
                                                                "example": "Approved"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "nullable": true
                                                },
                                                "bug_validations": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "validation_id": {
                                                                "type": "string",
                                                                "format": "uuid"
                                                            },
                                                            "bug_id": {
                                                                "type": "string",
                                                                "format": "uuid"
                                                            },
                                                            "status": {
                                                                "type": "string",
                                                                "example": "Verified"
                                                            },
                                                            "comments": {
                                                                "type": "string",
                                                                "example": "Bug verified and confirmed"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "nullable": true
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "QA Specialist not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "QA Specialist not found"
                                        },
                                        "data": {
                                            "type": "null"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "QA Specialists"
                ],
                "summary": "Update QA specialist",
                "description": "Updates an existing QA specialist's information",
                "operationId": "dd9c744e6239a33d6b699504af932550",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "QA Specialist ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Jane Smith Updated"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "jane.updated@example.com"
                                    },
                                    "expertise": {
                                        "type": "string",
                                        "example": "Web Testing, Security Testing, API Testing"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "newpassword123"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "newpassword123"
                                    },
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "active",
                                            "inactive"
                                        ],
                                        "example": "active"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "QA Specialist updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "QA Specialist updated successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "qa_id": {
                                                    "type": "string",
                                                    "format": "uuid"
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Jane Smith Updated"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "format": "email",
                                                    "example": "jane.updated@example.com"
                                                },
                                                "expertise": {
                                                    "type": "string",
                                                    "example": "Web Testing, Security Testing, API Testing"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "datetime",
                                                    "example": "2025-03-12 10:00:00"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "QA Specialist not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "QA Specialist not found"
                                        },
                                        "data": {
                                            "type": "null"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid"
                                        },
                                        "errors": {
                                            "properties": {
                                                "email": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The email has already been taken"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "QA Specialists"
                ],
                "summary": "Delete QA specialist",
                "description": "Deletes a QA specialist account",
                "operationId": "dcf23654010c93b21c15b6e7f07d4496",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "QA Specialist ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "QA Specialist deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "QA Specialist deleted successfully"
                                        },
                                        "data": {
                                            "type": "null"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "QA Specialist not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "QA Specialist not found"
                                        },
                                        "data": {
                                            "type": "null"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/test-cases": {
            "get": {
                "tags": [
                    "Test Cases"
                ],
                "summary": "Get list of test cases",
                "description": "Returns a paginated list of all test cases",
                "operationId": "f03a5109783cd0ffa14ba1ae767a6dd7",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 15
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search by test title",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "app_id",
                        "in": "query",
                        "description": "Filter by application ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "qa_id",
                        "in": "query",
                        "description": "Filter by QA specialist ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "priority",
                        "in": "query",
                        "description": "Filter by priority",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "Low",
                                "Medium",
                                "High"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Test cases retrieved successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "items": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "test_id": {
                                                                "type": "string",
                                                                "format": "uuid"
                                                            },
                                                            "app_id": {
                                                                "type": "string",
                                                                "format": "uuid"
                                                            },
                                                            "qa_id": {
                                                                "type": "string",
                                                                "format": "uuid"
                                                            },
                                                            "test_title": {
                                                                "type": "string",
                                                                "example": "User Login Functionality"
                                                            },
                                                            "test_steps": {
                                                                "type": "string",
                                                                "example": "1. Navigate to login page\\n2. Enter valid credentials\\n3. Click login button"
                                                            },
                                                            "expected_result": {
                                                                "type": "string",
                                                                "example": "User should be successfully logged in and redirected to dashboard"
                                                            },
                                                            "priority": {
                                                                "type": "string",
                                                                "enum": [
                                                                    "Low",
                                                                    "Medium",
                                                                    "High"
                                                                ],
                                                                "example": "High"
                                                            },
                                                            "created_at": {
                                                                "type": "string",
                                                                "format": "datetime",
                                                                "example": "2025-03-12 10:00:00"
                                                            },
                                                            "updated_at": {
                                                                "type": "string",
                                                                "format": "datetime",
                                                                "example": "2025-03-12 10:00:00"
                                                            },
                                                            "application": {
                                                                "properties": {
                                                                    "app_id": {
                                                                        "type": "string",
                                                                        "format": "uuid"
                                                                    },
                                                                    "app_name": {
                                                                        "type": "string",
                                                                        "example": "E-commerce Platform"
                                                                    },
                                                                    "app_url": {
                                                                        "type": "string",
                                                                        "example": "https://ecommerce.example.com"
                                                                    }
                                                                },
                                                                "type": "object",
                                                                "nullable": true
                                                            },
                                                            "qa_specialist": {
                                                                "properties": {
                                                                    "qa_id": {
                                                                        "type": "string",
                                                                        "format": "uuid"
                                                                    },
                                                                    "name": {
                                                                        "type": "string",
                                                                        "example": "Jane Smith"
                                                                    },
                                                                    "email": {
                                                                        "type": "string",
                                                                        "format": "email",
                                                                        "example": "jane@example.com"
                                                                    }
                                                                },
                                                                "type": "object",
                                                                "nullable": true
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "current_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "example": 15
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "example": 50
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Test Cases"
                ],
                "summary": "Create new test case",
                "description": "Creates a new test case",
                "operationId": "8380ac8e8e98b81489938f325baf547a",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "app_id",
                                    "qa_id",
                                    "test_title",
                                    "test_steps",
                                    "expected_result",
                                    "priority"
                                ],
                                "properties": {
                                    "app_id": {
                                        "type": "string",
                                        "format": "uuid"
                                    },
                                    "qa_id": {
                                        "type": "string",
                                        "format": "uuid"
                                    },
                                    "test_title": {
                                        "type": "string",
                                        "example": "User Login Functionality"
                                    },
                                    "test_steps": {
                                        "type": "string",
                                        "example": "1. Navigate to login page\\n2. Enter valid credentials\\n3. Click login button"
                                    },
                                    "expected_result": {
                                        "type": "string",
                                        "example": "User should be successfully logged in and redirected to dashboard"
                                    },
                                    "priority": {
                                        "type": "string",
                                        "enum": [
                                            "Low",
                                            "Medium",
                                            "High"
                                        ],
                                        "example": "High"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Test case created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Test case created successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "test_id": {
                                                    "type": "string",
                                                    "format": "uuid"
                                                },
                                                "app_id": {
                                                    "type": "string",
                                                    "format": "uuid"
                                                },
                                                "qa_id": {
                                                    "type": "string",
                                                    "format": "uuid"
                                                },
                                                "test_title": {
                                                    "type": "string",
                                                    "example": "User Login Functionality"
                                                },
                                                "test_steps": {
                                                    "type": "string",
                                                    "example": "1. Navigate to login page\\n2. Enter valid credentials\\n3. Click login button"
                                                },
                                                "expected_result": {
                                                    "type": "string",
                                                    "example": "User should be successfully logged in and redirected to dashboard"
                                                },
                                                "priority": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Low",
                                                        "Medium",
                                                        "High"
                                                    ],
                                                    "example": "High"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "datetime",
                                                    "example": "2025-03-12 10:00:00"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "datetime",
                                                    "example": "2025-03-12 10:00:00"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid"
                                        },
                                        "errors": {
                                            "properties": {
                                                "app_id": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The application id field is required"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/test-cases/{id}": {
            "get": {
                "tags": [
                    "Test Cases"
                ],
                "summary": "Get specific test case",
                "description": "Returns details of a specific test case",
                "operationId": "85fe1f25b6b85904dc20f92413e00b7f",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Test Case ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Test case retrieved successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "test_id": {
                                                    "type": "string",
                                                    "format": "uuid"
                                                },
                                                "app_id": {
                                                    "type": "string",
                                                    "format": "uuid"
                                                },
                                                "qa_id": {
                                                    "type": "string",
                                                    "format": "uuid"
                                                },
                                                "test_title": {
                                                    "type": "string",
                                                    "example": "User Login Functionality"
                                                },
                                                "test_steps": {
                                                    "type": "string",
                                                    "example": "1. Navigate to login page\\n2. Enter valid credentials\\n3. Click login button"
                                                },
                                                "expected_result": {
                                                    "type": "string",
                                                    "example": "User should be successfully logged in and redirected to dashboard"
                                                },
                                                "priority": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Low",
                                                        "Medium",
                                                        "High"
                                                    ],
                                                    "example": "High"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "datetime",
                                                    "example": "2025-03-12 10:00:00"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "datetime",
                                                    "example": "2025-03-12 10:00:00"
                                                },
                                                "application": {
                                                    "properties": {
                                                        "app_id": {
                                                            "type": "string",
                                                            "format": "uuid"
                                                        },
                                                        "app_name": {
                                                            "type": "string",
                                                            "example": "E-commerce Platform"
                                                        },
                                                        "app_url": {
                                                            "type": "string",
                                                            "example": "https://ecommerce.example.com"
                                                        }
                                                    },
                                                    "type": "object",
                                                    "nullable": true
                                                },
                                                "qa_specialist": {
                                                    "properties": {
                                                        "qa_id": {
                                                            "type": "string",
                                                            "format": "uuid"
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "Jane Smith"
                                                        },
                                                        "email": {
                                                            "type": "string",
                                                            "format": "email",
                                                            "example": "jane@example.com"
                                                        }
                                                    },
                                                    "type": "object",
                                                    "nullable": true
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Test case not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Test case not found"
                                        },
                                        "data": {
                                            "type": "null"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Test Cases"
                ],
                "summary": "Update test case",
                "description": "Updates an existing test case",
                "operationId": "766179db50d864919650d037147e0373",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Test Case ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "app_id": {
                                        "type": "string",
                                        "format": "uuid"
                                    },
                                    "qa_id": {
                                        "type": "string",
                                        "format": "uuid"
                                    },
                                    "test_title": {
                                        "type": "string",
                                        "example": "Updated User Login Functionality"
                                    },
                                    "test_steps": {
                                        "type": "string",
                                        "example": "1. Navigate to login page\\n2. Enter valid credentials\\n3. Click login button\\n4. Verify dashboard elements"
                                    },
                                    "expected_result": {
                                        "type": "string",
                                        "example": "User should be successfully logged in and redirected to dashboard with all elements visible"
                                    },
                                    "priority": {
                                        "type": "string",
                                        "enum": [
                                            "Low",
                                            "Medium",
                                            "High"
                                        ],
                                        "example": "High"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Test case updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Test case updated successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "test_id": {
                                                    "type": "string",
                                                    "format": "uuid"
                                                },
                                                "app_id": {
                                                    "type": "string",
                                                    "format": "uuid"
                                                },
                                                "qa_id": {
                                                    "type": "string",
                                                    "format": "uuid"
                                                },
                                                "test_title": {
                                                    "type": "string",
                                                    "example": "Updated User Login Functionality"
                                                },
                                                "test_steps": {
                                                    "type": "string",
                                                    "example": "1. Navigate to login page\\n2. Enter valid credentials\\n3. Click login button\\n4. Verify dashboard elements"
                                                },
                                                "expected_result": {
                                                    "type": "string",
                                                    "example": "User should be successfully logged in and redirected to dashboard with all elements visible"
                                                },
                                                "priority": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Low",
                                                        "Medium",
                                                        "High"
                                                    ],
                                                    "example": "High"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "datetime",
                                                    "example": "2025-03-12 10:00:00"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "datetime",
                                                    "example": "2025-03-12 10:00:00"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Test case not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Test case not found"
                                        },
                                        "data": {
                                            "type": "null"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid"
                                        },
                                        "errors": {
                                            "properties": {
                                                "priority": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The priority must be one of: Low, Medium, High"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Test Cases"
                ],
                "summary": "Delete test case",
                "description": "Deletes a test case",
                "operationId": "c931695b30fcb60a819ea6b2b1781ca6",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Test Case ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Test case deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Test case deleted successfully"
                                        },
                                        "data": {
                                            "type": "null"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Test case not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Test case not found"
                                        },
                                        "data": {
                                            "type": "null"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/uat-tasks": {
            "get": {
                "tags": [
                    "UAT Tasks"
                ],
                "summary": "Get list of UAT tasks",
                "description": "Returns a paginated list of all UAT tasks",
                "operationId": "b9d2a3f1d08edf8efc331ac78811c408",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 15
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter by status",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "Assigned",
                                "In Progress",
                                "Completed"
                            ]
                        }
                    },
                    {
                        "name": "app_id",
                        "in": "query",
                        "description": "Filter by application ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "worker_id",
                        "in": "query",
                        "description": "Filter by worker ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "UAT tasks retrieved successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "items": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "task_id": {
                                                                "type": "string",
                                                                "format": "uuid"
                                                            },
                                                            "app_id": {
                                                                "type": "string",
                                                                "format": "uuid"
                                                            },
                                                            "test_id": {
                                                                "type": "string",
                                                                "format": "uuid"
                                                            },
                                                            "worker_id": {
                                                                "type": "string",
                                                                "format": "uuid"
                                                            },
                                                            "status": {
                                                                "type": "string",
                                                                "enum": [
                                                                    "Assigned",
                                                                    "In Progress",
                                                                    "Completed"
                                                                ],
                                                                "example": "In Progress"
                                                            },
                                                            "started_at": {
                                                                "type": "string",
                                                                "format": "datetime",
                                                                "example": "2025-03-12 10:00:00",
                                                                "nullable": true
                                                            },
                                                            "completed_at": {
                                                                "type": "string",
                                                                "format": "datetime",
                                                                "example": "2025-03-12 11:00:00",
                                                                "nullable": true
                                                            },
                                                            "created_at": {
                                                                "type": "string",
                                                                "format": "datetime",
                                                                "example": "2025-03-12 10:00:00"
                                                            },
                                                            "updated_at": {
                                                                "type": "string",
                                                                "format": "datetime",
                                                                "example": "2025-03-12 11:00:00"
                                                            },
                                                            "duration": {
                                                                "type": "integer",
                                                                "example": 60,
                                                                "nullable": true
                                                            },
                                                            "bug_reports_count": {
                                                                "type": "integer",
                                                                "example": 2,
                                                                "nullable": true
                                                            },
                                                            "application": {
                                                                "properties": {
                                                                    "app_id": {
                                                                        "type": "string",
                                                                        "format": "uuid"
                                                                    },
                                                                    "app_name": {
                                                                        "type": "string",
                                                                        "example": "E-commerce Platform"
                                                                    }
                                                                },
                                                                "type": "object",
                                                                "nullable": true
                                                            },
                                                            "test_case": {
                                                                "properties": {
                                                                    "test_id": {
                                                                        "type": "string",
                                                                        "format": "uuid"
                                                                    },
                                                                    "test_title": {
                                                                        "type": "string",
                                                                        "example": "User Login Test"
                                                                    }
                                                                },
                                                                "type": "object",
                                                                "nullable": true
                                                            },
                                                            "crowdworker": {
                                                                "properties": {
                                                                    "worker_id": {
                                                                        "type": "string",
                                                                        "format": "uuid"
                                                                    },
                                                                    "name": {
                                                                        "type": "string",
                                                                        "example": "John Doe"
                                                                    }
                                                                },
                                                                "type": "object",
                                                                "nullable": true
                                                            },
                                                            "bug_reports": {
                                                                "type": "array",
                                                                "items": {
                                                                    "properties": {
                                                                        "bug_id": {
                                                                            "type": "string",
                                                                            "format": "uuid"
                                                                        },
                                                                        "title": {
                                                                            "type": "string",
                                                                            "example": "Login Button Not Responsive"
                                                                        },
                                                                        "severity": {
                                                                            "type": "string",
                                                                            "example": "High"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "nullable": true
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "current_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "example": 15
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "example": 50
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "UAT Tasks"
                ],
                "summary": "Create new UAT task",
                "description": "Creates a new UAT task assignment",
                "operationId": "ae65bcb1b9f920b6060bee8b5484f7a2",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "app_id",
                                    "test_id",
                                    "worker_id",
                                    "status"
                                ],
                                "properties": {
                                    "app_id": {
                                        "type": "string",
                                        "format": "uuid"
                                    },
                                    "test_id": {
                                        "type": "string",
                                        "format": "uuid"
                                    },
                                    "worker_id": {
                                        "type": "string",
                                        "format": "uuid"
                                    },
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "Assigned",
                                            "In Progress",
                                            "Completed"
                                        ],
                                        "example": "Assigned"
                                    },
                                    "started_at": {
                                        "type": "string",
                                        "format": "datetime",
                                        "example": "2025-03-12 10:00:00",
                                        "nullable": true
                                    },
                                    "completed_at": {
                                        "type": "string",
                                        "format": "datetime",
                                        "example": "2025-03-12 11:00:00",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "UAT task created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "UAT task created successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "task_id": {
                                                    "type": "string",
                                                    "format": "uuid"
                                                },
                                                "app_id": {
                                                    "type": "string",
                                                    "format": "uuid"
                                                },
                                                "test_id": {
                                                    "type": "string",
                                                    "format": "uuid"
                                                },
                                                "worker_id": {
                                                    "type": "string",
                                                    "format": "uuid"
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "example": "Assigned"
                                                },
                                                "started_at": {
                                                    "type": "string",
                                                    "format": "datetime",
                                                    "example": "2025-03-12 10:00:00",
                                                    "nullable": true
                                                },
                                                "completed_at": {
                                                    "type": "string",
                                                    "format": "datetime",
                                                    "example": "2025-03-12 11:00:00",
                                                    "nullable": true
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "datetime",
                                                    "example": "2025-03-12 10:00:00"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "datetime",
                                                    "example": "2025-03-12 10:00:00"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid"
                                        },
                                        "errors": {
                                            "properties": {
                                                "app_id": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The application id field is required"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/uat-tasks/{id}": {
            "get": {
                "tags": [
                    "UAT Tasks"
                ],
                "summary": "Get specific UAT task",
                "description": "Returns details of a specific UAT task",
                "operationId": "19cb59e7a044982ba47acb79ca3b0d86",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "UAT Task ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "UAT task retrieved successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "task_id": {
                                                    "type": "string",
                                                    "format": "uuid"
                                                },
                                                "app_id": {
                                                    "type": "string",
                                                    "format": "uuid"
                                                },
                                                "test_id": {
                                                    "type": "string",
                                                    "format": "uuid"
                                                },
                                                "worker_id": {
                                                    "type": "string",
                                                    "format": "uuid"
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Assigned",
                                                        "In Progress",
                                                        "Completed"
                                                    ],
                                                    "example": "In Progress"
                                                },
                                                "started_at": {
                                                    "type": "string",
                                                    "format": "datetime",
                                                    "example": "2025-03-12 10:00:00",
                                                    "nullable": true
                                                },
                                                "completed_at": {
                                                    "type": "string",
                                                    "format": "datetime",
                                                    "example": "2025-03-12 11:00:00",
                                                    "nullable": true
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "datetime",
                                                    "example": "2025-03-12 10:00:00"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "datetime",
                                                    "example": "2025-03-12 11:00:00"
                                                },
                                                "duration": {
                                                    "type": "integer",
                                                    "example": 60,
                                                    "nullable": true
                                                },
                                                "application": {
                                                    "properties": {
                                                        "app_id": {
                                                            "type": "string",
                                                            "format": "uuid"
                                                        },
                                                        "app_name": {
                                                            "type": "string",
                                                            "example": "E-commerce Platform"
                                                        }
                                                    },
                                                    "type": "object",
                                                    "nullable": true
                                                },
                                                "test_case": {
                                                    "properties": {
                                                        "test_id": {
                                                            "type": "string",
                                                            "format": "uuid"
                                                        },
                                                        "test_title": {
                                                            "type": "string",
                                                            "example": "User Login Test"
                                                        }
                                                    },
                                                    "type": "object",
                                                    "nullable": true
                                                },
                                                "crowdworker": {
                                                    "properties": {
                                                        "worker_id": {
                                                            "type": "string",
                                                            "format": "uuid"
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "John Doe"
                                                        }
                                                    },
                                                    "type": "object",
                                                    "nullable": true
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "UAT task not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "UAT task not found"
                                        },
                                        "data": {
                                            "type": "null"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "UAT Tasks"
                ],
                "summary": "Update UAT task",
                "description": "Updates an existing UAT task",
                "operationId": "4b9d499913ea87142a3ac7f28c0546cd",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "UAT Task ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "app_id": {
                                        "type": "string",
                                        "format": "uuid"
                                    },
                                    "test_id": {
                                        "type": "string",
                                        "format": "uuid"
                                    },
                                    "worker_id": {
                                        "type": "string",
                                        "format": "uuid"
                                    },
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "Assigned",
                                            "In Progress",
                                            "Completed"
                                        ],
                                        "example": "In Progress"
                                    },
                                    "started_at": {
                                        "type": "string",
                                        "format": "datetime",
                                        "example": "2025-03-12 10:00:00",
                                        "nullable": true
                                    },
                                    "completed_at": {
                                        "type": "string",
                                        "format": "datetime",
                                        "example": "2025-03-12 11:00:00",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "UAT task updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "UAT task updated successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "task_id": {
                                                    "type": "string",
                                                    "format": "uuid"
                                                },
                                                "app_id": {
                                                    "type": "string",
                                                    "format": "uuid"
                                                },
                                                "test_id": {
                                                    "type": "string",
                                                    "format": "uuid"
                                                },
                                                "worker_id": {
                                                    "type": "string",
                                                    "format": "uuid"
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "example": "In Progress"
                                                },
                                                "started_at": {
                                                    "type": "string",
                                                    "format": "datetime",
                                                    "example": "2025-03-12 10:00:00",
                                                    "nullable": true
                                                },
                                                "completed_at": {
                                                    "type": "string",
                                                    "format": "datetime",
                                                    "example": "2025-03-12 11:00:00",
                                                    "nullable": true
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "datetime",
                                                    "example": "2025-03-12 10:00:00"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "datetime",
                                                    "example": "2025-03-12 11:00:00"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "UAT task not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "UAT Tasks"
                ],
                "summary": "Delete UAT task",
                "description": "Deletes a UAT task",
                "operationId": "d4f6b5ff82ba33f1c32bd9c9e4a90a71",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "UAT Task ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "UAT task deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "UAT task deleted successfully"
                                        },
                                        "data": {
                                            "type": "null"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "UAT task not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/uat-tasks/{id}/start": {
            "put": {
                "tags": [
                    "UAT Tasks"
                ],
                "summary": "Start UAT task",
                "description": "Marks a UAT task as started",
                "operationId": "43cdcfee9c4fba6da74679333185b159",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "UAT Task ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "UAT task started successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "UAT task started successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "task_id": {
                                                    "type": "string",
                                                    "format": "uuid"
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "example": "In Progress"
                                                },
                                                "started_at": {
                                                    "type": "string",
                                                    "format": "datetime",
                                                    "example": "2025-03-12 10:00:00"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "UAT task not found"
                    },
                    "422": {
                        "description": "Task cannot be started"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/uat-tasks/{id}/complete": {
            "put": {
                "tags": [
                    "UAT Tasks"
                ],
                "summary": "Complete UAT task",
                "description": "Marks a UAT task as completed",
                "operationId": "c6227b0b8ac9b8d0211fb54b70a17cae",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "UAT Task ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "UAT task completed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "UAT task completed successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "task_id": {
                                                    "type": "string",
                                                    "format": "uuid"
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "example": "Completed"
                                                },
                                                "completed_at": {
                                                    "type": "string",
                                                    "format": "datetime",
                                                    "example": "2025-03-12 11:00:00"
                                                },
                                                "duration": {
                                                    "type": "integer",
                                                    "example": 60
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "UAT task not found"
                    },
                    "422": {
                        "description": "Task cannot be completed"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "SuccessResponse": {
                "properties": {
                    "status": {
                        "type": "string",
                        "example": "success"
                    },
                    "message": {
                        "type": "string",
                        "example": "Operation successful"
                    },
                    "data": {
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "ErrorResponse": {
                "properties": {
                    "status": {
                        "type": "string",
                        "example": "error"
                    },
                    "message": {
                        "type": "string",
                        "example": "Error message"
                    },
                    "errors": {
                        "type": "object"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT",
                "description": "Enter token in format (Bearer <token>)"
            }
        }
    },
    "tags": [
        {
            "name": "Applications",
            "description": "API Endpoints for Application management"
        },
        {
            "name": "Authentication",
            "description": "API Endpoints for user authentication"
        },
        {
            "name": "Bug Reports",
            "description": "API Endpoints for Bug Report management"
        },
        {
            "name": "Bug Validations",
            "description": "API Endpoints for Bug Validation management"
        },
        {
            "name": "Clients",
            "description": "API Endpoints for Client management"
        },
        {
            "name": "Crowdworkers",
            "description": "API Endpoints for Crowdworker management"
        },
        {
            "name": "QA Specialists",
            "description": "API Endpoints for QA Specialist management"
        },
        {
            "name": "Test Cases",
            "description": "API Endpoints for Test Case management"
        },
        {
            "name": "UAT Tasks",
            "description": "API Endpoints for UAT Task management"
        }
    ],
    "security": [
        {
            "bearerAuth": []
        }
    ]
}